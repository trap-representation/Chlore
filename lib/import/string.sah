import "./lib/bin/__std_string_relative_addr.sa"

$if LD_DYN 1
	:std_string dat str "./lib/bin/string.sso"
$fi

/ Pushes the length of the nul-terminated string pointed to by the (explicit) pointer present at the [top] of the stack. /

:hidden$std_string_strlen (
	swap
	$if DY_OBJ 1
		str1 swap
	$fi
	pushi64 sym___std_string_strlen
	$if LD_DYN 0
		pushi64 __std_string
		$if DY_OBJ 1
			& lfr1 addi64
		$fi
	$fi
	$elseif LD_DYN 1
		& lfr0
		loidx
	$fi
	callobj
	swap
	ret
)


:hidden$std_string_strlen {
	$if DY_OBJ 1
		str1
	$fi
	pushi64 sym___std_string_strlen
	$if LD_DYN 0
		pushi64 __std_string
		$if DY_OBJ 1
			& lfr1 addi64
		$fi
	$fi
	$elseif LD_DYN 1
		& lfr0
		loidx
	$fi
	callobj
}

:hidden$std_string_init (
	$if LD_DYN 1
		& lfr0
		unloadobj
		$if DY_OBJ 1
			swap
		$fi
		pushi64 std_string
		$if DY_OBJ 1
			addi64
		$fi
		& lfr0 swap
		loadobjc
	$fi
	$elseif DY_OBJ 1
		swap pop
	$fi
	ret
)

:hidden$std_string_init {
	$if LD_DYN 1
		& lfr0
		unloadobj
		pushi64 std_string
		$if DY_OBJ 1
			addi64
		$fi
		& lfr0 swap
		loadobjc
	$fi
	$elseif DY_OBJ 1
		pop
	$fi
}

$if LD_DYN 0
:hidden$__std_string
	include "./lib/bin/string.sso"
$fi
