/ example 3: Aligned alloc
  This program allocates a chunk of memory aligned to an 8 byte boundary, stores the number (n) 42 (unsigned int) in that chunk with an aligned store; then it loads n back from the chunk with an aligned load, and writes n to stdout
/

import "stdlib.chlore"
import "io.chlore"
import "alloc2.chlore"

:main

pushl 1024 ;we'll allocate a chunk of size 1024 bytes
pushui 8 ;aligned to an 8-byte boundary
pushp aaseg call
get0 panic

;the top of the stack now has a pointer to an object in the heap
dup ;dup this so we can free it later
dup
pushui 42 ;this is the value that we're going to store in the heap
swap
astoreui ;do an aligned store


aloadui ;do an aligned load from the same address
;42 should now be on the top of the stack
pushp putui call

pushp flush call ;free the allocated chunk

pushp mem_close call
hlt
