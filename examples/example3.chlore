/ example 3: Aligned alloc
  This program allocates a chunk of memory aligned to an 8 byte boundary, stores the number (n) 42 (unsigned int) in that chunk with an aligned store; then it loads n back from the chunk with an aligned load, and writes n to stdout
/
import "./lib/import/io.chloreh"
import "./lib/import/alloc2.chloreh"

:main

pushuc 0
pushp std_alloc2
call
pushuc 1
pushp std_io
call

pushuc 0 pushuc 0
pushp aaseg call
pushuc 0 pushuc 1
pushp mem_close call
pushuc 1 pushuc 2
pushp putui call
pushuc 0 pushuc 3
pushp mem_init call

pushuc 3 invoke
ldr0 panic

pushl 1024 ;we'll allocate a chunk of size 1024 bytes
pushuc 8 ;aligned to an 8-byte boundary
pushuc 0 invoke
ldr0 panic

;the top of the stack now has a pointer to the heap
ep2ip ;convert that to a bare pointer
dup
pushui 42 ;this is the value that we're going to store in the heap
swap
asthui ;do an aligned store


aldhui ;do an aligned load from the same address
;42 should now be on the top of the stack
pushuc 2 invoke

pushuc 1 invoke
hlt
